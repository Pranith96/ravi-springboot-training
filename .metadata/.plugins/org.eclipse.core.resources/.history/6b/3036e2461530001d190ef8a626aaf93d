package com.student.service;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.student.entity.Student;
import com.student.repository.StudentRepository;

@Service
public class StudentServiceImpl implements StudentService {

	@Autowired
	StudentRepository repository;

	@Override
	public String addStudent(Student student) {
		Student response = repository.save(student);
		if (response == null) {
			return "Data is not saved";
		}
		return "Data is Saved successfully";
	}

	@Override
	public List<Student> getAllStudents() {
		List<Student> response = repository.findAll();
		if (response == null || response.isEmpty()) {
			throw new RuntimeException("Data is Empty");
		}
		return response;
	}

	@Override
	public Student getStudentById(Integer studentId) {
		Optional<Student> response = repository.findById(studentId);
		if (!response.isPresent()) {
			throw new RuntimeException("Data is not found");
		}
		return response.get();
	}

	@Override
	public List<Student> getStudentByName(String name) {
		//Optional<List<Student>> response = repository.findByName(name);
		Optional<List<Student>> response = repository.getByName(name);
		if (!response.isPresent()) {
			throw new RuntimeException("Data is not found for given name");
		}
		return response.get();
	}

	@Override
	public Student getStudentByLoginIdAndPassword(String loginId, String password) {
		//Optional<Student> response = repository.findByLongIdAndPassword(loginId,password);
		Optional<Student> response = repository.getByLongIdAndPassword(loginId,password);
		if (!response.isPresent()) {
			throw new RuntimeException("Data is not found for loginId and password");
		}
		return response.get();
	}

	@Override
	public String UpdateStudentName(String name, Integer studentId) {
		Optional<Student> response = repository.findById(studentId);
		if (!response.isPresent()) {
			throw new RuntimeException("Data is not found");
		}
		
		response.get().setName(name);
		repository.save(response.get())
		
		return null;
	}
}
